package lab5;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class Corona extends javax.swing.JFrame {

    ArrayList<Pais> paises = new ArrayList<>();
    ArrayList<Persona> hombres = new ArrayList<>();
    ArrayList<Persona> mujeres = new ArrayList<>();
    
    
    /**
     * Creates new form Corona
     */
    public Corona() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        bt_modificarPersona.setVisible(false);
        bt_modificarPais.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_crearPais = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        bt_crearPais = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tf_nombrePais = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tf_himno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jdc_fundacion = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        bt_colorBandera = new javax.swing.JButton();
        bt_modificarPais = new javax.swing.JButton();
        bg_genero = new javax.swing.ButtonGroup();
        jd_crearPersona = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        bt_crearPersona = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_nombrePersona = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tf_apellido = new javax.swing.JTextField();
        tf_nacionalidad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        sp_edad = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tf_vocacion = new javax.swing.JTextField();
        rb_masculino = new javax.swing.JRadioButton();
        rb_femenino = new javax.swing.JRadioButton();
        cb_titulo = new javax.swing.JCheckBox();
        cb_infectado = new javax.swing.JCheckBox();
        bt_modificarPersona = new javax.swing.JButton();
        jd_agregar = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        cb_personas = new javax.swing.JComboBox<>();
        rb_hombres = new javax.swing.JRadioButton();
        rb_mujeres = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cb_paises = new javax.swing.JComboBox<>();
        bt_agregar = new javax.swing.JButton();
        bg_sexo = new javax.swing.ButtonGroup();
        pm_pais = new javax.swing.JPopupMenu();
        jmi_eliminarpais = new javax.swing.JMenuItem();
        jmi_modificarpais = new javax.swing.JMenuItem();
        jmi_agregarPersona = new javax.swing.JMenuItem();
        pm_persona = new javax.swing.JPopupMenu();
        jmi_eliminarpersona = new javax.swing.JMenuItem();
        jmi_modificarpersona = new javax.swing.JMenuItem();
        jmi_expulsar = new javax.swing.JMenuItem();
        pm_pais1 = new javax.swing.JPopupMenu();
        jmi_eliminarpais1 = new javax.swing.JMenuItem();
        jmi_modificarpais1 = new javax.swing.JMenuItem();
        jmi_agregarPersona1 = new javax.swing.JMenuItem();
        pm_persona1 = new javax.swing.JPopupMenu();
        jmi_eliminarpersona1 = new javax.swing.JMenuItem();
        jmi_modificarpersona1 = new javax.swing.JMenuItem();
        jmi_expulsar1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_paises = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_infectados = new javax.swing.JTree();
        bt_filtrar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jm_admin = new javax.swing.JMenu();
        jm_agregar = new javax.swing.JMenu();
        jmi_cPais = new javax.swing.JMenuItem();
        jmi_cPersona = new javax.swing.JMenuItem();
        jmi_add = new javax.swing.JMenuItem();

        jd_crearPais.setTitle("Crear País");
        jd_crearPais.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jPanel2.setBackground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        bt_crearPais.setBackground(new java.awt.Color(51, 51, 255));
        bt_crearPais.setText("Crear País");
        bt_crearPais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_crearPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_crearPaisActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel6.setText("Himno Nacional:");

        jLabel2.setText("Fecha de fundación:");

        jdc_fundacion.setDate(new Date());
        jdc_fundacion.setDateFormatString("dd / MM / yyyy");

        jLabel3.setText("Color de bandera:");

        bt_colorBandera.setBackground(new java.awt.Color(255, 0, 0));
        bt_colorBandera.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_colorBandera.setBorderPainted(false);
        bt_colorBandera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_colorBanderaActionPerformed(evt);
            }
        });

        bt_modificarPais.setBackground(new java.awt.Color(51, 51, 255));
        bt_modificarPais.setText("Modificar País");
        bt_modificarPais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_modificarPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_modificarPaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_nombrePais, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_himno, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jdc_fundacion, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(bt_colorBandera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_modificarPais, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_crearPais, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(198, 198, 198))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tf_nombrePais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tf_himno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jdc_fundacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(bt_colorBandera, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(43, 43, 43)
                .addComponent(bt_crearPais)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_modificarPais)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jd_crearPais.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 210));

        jd_crearPersona.setTitle("Crear Persona");
        jd_crearPersona.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 204, 0));

        jPanel4.setBackground(new java.awt.Color(51, 0, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        bt_crearPersona.setBackground(new java.awt.Color(51, 51, 255));
        bt_crearPersona.setText("Crear Persona");
        bt_crearPersona.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_crearPersona.setBorderPainted(false);
        bt_crearPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_crearPersonaActionPerformed(evt);
            }
        });

        jLabel7.setText("Nacionalidad:");

        jLabel8.setText("Nombre:");

        jLabel9.setText("Apellido:");

        jLabel10.setText("Edad:");

        sp_edad.setModel(new javax.swing.SpinnerNumberModel(20, 0, 135, 1));

        jLabel11.setText("Género:");

        jLabel12.setText("Vocación:");

        rb_masculino.setBackground(new java.awt.Color(255, 204, 0));
        bg_genero.add(rb_masculino);
        rb_masculino.setSelected(true);
        rb_masculino.setText("Masculino");

        rb_femenino.setBackground(new java.awt.Color(255, 204, 0));
        bg_genero.add(rb_femenino);
        rb_femenino.setText("Femenino");

        cb_titulo.setBackground(new java.awt.Color(255, 204, 0));
        cb_titulo.setText("Tiene título");

        cb_infectado.setBackground(new java.awt.Color(255, 204, 0));
        cb_infectado.setText("Está infectado de Coronavirus");

        bt_modificarPersona.setBackground(new java.awt.Color(51, 51, 255));
        bt_modificarPersona.setText("Modificar Persona");
        bt_modificarPersona.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_modificarPersona.setBorderPainted(false);
        bt_modificarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_modificarPersonaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rb_femenino)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(cb_titulo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_infectado))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                            .addComponent(tf_nombrePersona, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel9))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                            .addComponent(tf_nacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel10))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(rb_masculino)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel12)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tf_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(sp_edad, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tf_vocacion, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bt_modificarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt_crearPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tf_nombrePersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tf_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tf_nacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(sp_edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(tf_vocacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_masculino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb_femenino)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_titulo)
                    .addComponent(cb_infectado))
                .addGap(18, 18, 18)
                .addComponent(bt_crearPersona)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_modificarPersona)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jd_crearPersona.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        jd_agregar.setTitle("Agregar");

        jPanel5.setBackground(new java.awt.Color(255, 102, 102));

        rb_hombres.setBackground(new java.awt.Color(255, 102, 102));
        bg_sexo.add(rb_hombres);
        rb_hombres.setSelected(true);
        rb_hombres.setText("Hombres");

        rb_mujeres.setBackground(new java.awt.Color(255, 102, 102));
        bg_sexo.add(rb_mujeres);
        rb_mujeres.setText("Mujeres");
        rb_mujeres.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rb_mujeresStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 255, 255));
        jLabel4.setText("Agregar");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 255, 255));
        jLabel5.setText("al país:");

        bt_agregar.setBackground(new java.awt.Color(0, 0, 0));
        bt_agregar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_agregar.setForeground(new java.awt.Color(255, 255, 204));
        bt_agregar.setText("Agregar");
        bt_agregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bt_agregar.setBorderPainted(false);
        bt_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(cb_personas, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(rb_hombres)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_mujeres, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cb_paises, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_agregar, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(cb_personas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rb_hombres)
                    .addComponent(rb_mujeres))
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(cb_paises, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bt_agregar)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_agregarLayout = new javax.swing.GroupLayout(jd_agregar.getContentPane());
        jd_agregar.getContentPane().setLayout(jd_agregarLayout);
        jd_agregarLayout.setHorizontalGroup(
            jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd_agregarLayout.setVerticalGroup(
            jd_agregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jmi_eliminarpais.setText("Eliminar pais");
        jmi_eliminarpais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarpaisActionPerformed(evt);
            }
        });
        pm_pais.add(jmi_eliminarpais);

        jmi_modificarpais.setText("Modificar pais");
        jmi_modificarpais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_modificarpaisActionPerformed(evt);
            }
        });
        pm_pais.add(jmi_modificarpais);

        jmi_agregarPersona.setText("Agregar persona");
        jmi_agregarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_agregarPersonaActionPerformed(evt);
            }
        });
        pm_pais.add(jmi_agregarPersona);

        jmi_eliminarpersona.setText("Eliminar persona");
        jmi_eliminarpersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarpersonaActionPerformed(evt);
            }
        });
        pm_persona.add(jmi_eliminarpersona);

        jmi_modificarpersona.setText("Modificar persona");
        jmi_modificarpersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_modificarpersonaActionPerformed(evt);
            }
        });
        pm_persona.add(jmi_modificarpersona);

        jmi_expulsar.setText("Expulsar del país");
        jmi_expulsar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_expulsarActionPerformed(evt);
            }
        });
        pm_persona.add(jmi_expulsar);

        jmi_eliminarpais1.setText("Eliminar pais");
        jmi_eliminarpais1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarpais1ActionPerformed(evt);
            }
        });
        pm_pais1.add(jmi_eliminarpais1);

        jmi_modificarpais1.setText("Modificar pais");
        jmi_modificarpais1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_modificarpais1ActionPerformed(evt);
            }
        });
        pm_pais1.add(jmi_modificarpais1);

        jmi_agregarPersona1.setText("Agregar persona");
        jmi_agregarPersona1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_agregarPersona1ActionPerformed(evt);
            }
        });
        pm_pais1.add(jmi_agregarPersona1);

        jmi_eliminarpersona1.setText("Eliminar persona");
        jmi_eliminarpersona1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarpersona1ActionPerformed(evt);
            }
        });
        pm_persona1.add(jmi_eliminarpersona1);

        jmi_modificarpersona1.setText("Modificar persona");
        jmi_modificarpersona1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_modificarpersona1ActionPerformed(evt);
            }
        });
        pm_persona1.add(jmi_modificarpersona1);

        jmi_expulsar1.setText("Expulsar del país");
        jmi_expulsar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_expulsar1ActionPerformed(evt);
            }
        });
        pm_persona1.add(jmi_expulsar1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Países");
        jt_paises.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jt_paises.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_paisesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_paises);

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Países");
        jt_infectados.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jt_infectados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_infectadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_infectados);

        bt_filtrar.setText("Infectados");
        bt_filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_filtrarActionPerformed(evt);
            }
        });

        jm_admin.setText("Administración");

        jm_agregar.setText("Crear");

        jmi_cPais.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jmi_cPais.setText("Crear país");
        jmi_cPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_cPaisActionPerformed(evt);
            }
        });
        jm_agregar.add(jmi_cPais);

        jmi_cPersona.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jmi_cPersona.setText("Crear persona");
        jmi_cPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_cPersonaActionPerformed(evt);
            }
        });
        jm_agregar.add(jmi_cPersona);

        jm_admin.add(jm_agregar);

        jmi_add.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jmi_add.setText("Agregar persona a un país");
        jmi_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_addActionPerformed(evt);
            }
        });
        jm_admin.add(jmi_add);

        jMenuBar1.add(jm_admin);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_filtrar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(bt_filtrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmi_cPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_cPersonaActionPerformed
        crearPersona();
    }//GEN-LAST:event_jmi_cPersonaActionPerformed

    private void jt_paisesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_paisesMouseClicked
        
        if(evt.isMetaDown()){
            
            int row = jt_paises.getClosestRowForLocation(evt.getX(), evt.getY());
            jt_paises.setSelectionRow(row);
            
            Object node = jt_paises.getSelectionPath().getLastPathComponent();
            nodo_seleccionado = (DefaultMutableTreeNode) node;
            
            if(nodo_seleccionado.getUserObject() instanceof Pais){
                pais_seleccionado = (Pais) nodo_seleccionado.getUserObject();
                
                pm_pais.show(evt.getComponent(), evt.getX(), evt.getY());
            } else if(nodo_seleccionado.getUserObject() instanceof Persona){
                persona_seleccionada = (Persona) nodo_seleccionado.getUserObject();
                
                pm_persona.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jt_paisesMouseClicked

    private void bt_crearPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_crearPaisActionPerformed
        String nombrePais;
        String himnoNacional;
        Date fechaFundacion;
        Color colorBandera;
        
        try {
            
            nombrePais = tf_nombrePais.getText();
            himnoNacional = tf_himno.getText();
            fechaFundacion = jdc_fundacion.getDate();
            colorBandera = bt_colorBandera.getBackground();
            
            if(nombrePais.equals("")
                    || himnoNacional.equals("")){
                
                throw new Exception("No se ha ingresado uno o más campos.");
            }
            
            Pais p = new Pais(nombrePais, fechaFundacion, himnoNacional, colorBandera);
            
            paises.add(p);
            
            tf_nombrePais.setText("");
            tf_himno.setText("");
            bt_colorBandera.setBackground(Color.red);
            jdc_fundacion.setDate(new Date());
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al crear una persona.", "Eror", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_bt_crearPaisActionPerformed

    private void bt_crearPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_crearPersonaActionPerformed
        String nacionalidad;
        String nombrePersona;
        String apellido;
        int edad;
        String genero;
        String vocacion;
        boolean tieneTitulo;
        boolean infectadoCorona;
        
        try {
            
            
            
            nacionalidad = tf_nacionalidad.getText();
            nombrePersona = tf_nombrePersona.getText();
            apellido = tf_apellido.getText();
            edad = Integer.parseInt(sp_edad.getValue().toString());
            genero = (rb_masculino.isSelected()) ? "Masculino" : "Femenino" ;
            vocacion = tf_vocacion.getText();
            tieneTitulo = cb_titulo.isSelected();
            infectadoCorona = cb_infectado.isSelected();
            
            if(nacionalidad.equals("") 
                    || nombrePersona.equals("")
                    || apellido.equals("")
                    || vocacion.equals("")){
                
                throw new Exception("No se ha ingresado uno o más campos.");
                
            }
            
            Persona p = new Persona(nacionalidad, nombrePersona, apellido, edad, genero, vocacion, tieneTitulo, infectadoCorona);
            
            if(rb_masculino.isSelected()){
                
                hombres.add(p);
                
            } else {
                
                mujeres.add(p);
                
            }
            
            tf_nacionalidad.setText("");
            tf_nombrePersona.setText("");
            tf_apellido.setText("");
            sp_edad.setValue(20);
            rb_masculino.setSelected(true);
            tf_vocacion.setText("");
            cb_titulo.setSelected(false);
            cb_infectado.setSelected(false);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al crear una persona.", "Eror", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_bt_crearPersonaActionPerformed

    private void bt_colorBanderaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_colorBanderaActionPerformed
        bt_colorBandera.setBackground(
                JColorChooser.showDialog(this, "Color de la bandera", Color.red)
        );
    }//GEN-LAST:event_bt_colorBanderaActionPerformed

    private void jmi_cPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_cPaisActionPerformed
        crearPais();
    }//GEN-LAST:event_jmi_cPaisActionPerformed

    private void jmi_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_addActionPerformed
        if(paises.size()==0){
            JOptionPane.showMessageDialog(this, "No hay países a los que agregar una persona.", "Falta de requisitos", JOptionPane.ERROR_MESSAGE);
        } else if((hombres.size() + mujeres.size() ==0)){
            JOptionPane.showMessageDialog(this, "No hay personas a los que agregar un país.", "Falta de requisitos", JOptionPane.ERROR_MESSAGE);
        } else {
            
            agregarPersona();
            
        }
    }//GEN-LAST:event_jmi_addActionPerformed

    private void rb_mujeresStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rb_mujeresStateChanged
        if(rb_mujeres.isSelected()){
            
            DefaultComboBoxModel model = new DefaultComboBoxModel(mujeres.toArray());//(DefaultComboBoxModel) cb_personas.getModel();
            //model.removeAllElements();
            //for (Persona mujer : mujeres) {
                //model.addElement(mujer);
            //}
            cb_personas.setModel(model);
            //hombreSeleccionado = false;
            
        } else {// && !hombreSeleccionado){
            
            DefaultComboBoxModel model = new DefaultComboBoxModel(hombres.toArray());//(DefaultComboBoxModel) cb_personas.getModel();
            //model.removeAllElements();
            //for (Persona hombre : hombres) {
              //  model.addElement(hombre);
            //}
            cb_personas.setModel(model);
            //hombreSeleccionado = true;
            
        }
        
    }//GEN-LAST:event_rb_mujeresStateChanged

    private void bt_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregarActionPerformed
        
        try {
            
            boolean flag = true;
            
            Persona p = (Persona) cb_personas.getSelectedItem();
            Pais c = (Pais) cb_paises.getSelectedItem();
            
            DefaultTreeModel t = (DefaultTreeModel) jt_paises.getModel();
            DefaultMutableTreeNode root = (DefaultMutableTreeNode) t.getRoot();
            
            for(int i=0; i<root.getChildCount(); i++){
                if ( ((DefaultMutableTreeNode)root.getChildAt(i)).getUserObject().equals(c) ) {
                    flag = false;
                    
                    int sexo = (p.getGenero().equalsIgnoreCase("Masculino")) ? 0 : 1;
                    
                    ((DefaultMutableTreeNode)
                            ((DefaultMutableTreeNode)root.getChildAt(i))
                                    .getChildAt(sexo)).add(
                                            new DefaultMutableTreeNode(
                                                    p
                                            )
                                    );
                    
                    break;
                }//FIn if
            }
            
            if (flag) {
                
                DefaultMutableTreeNode pais = new DefaultMutableTreeNode(c);
                pais.add( new DefaultMutableTreeNode("Hombres") );
                pais.add( new DefaultMutableTreeNode("Mujeres") );
                
                int sexo = (p.getGenero().equalsIgnoreCase("Masculino")) ? 0 : 1;
                
                ((DefaultMutableTreeNode)pais.getChildAt(sexo))
                        .add(
                                new DefaultMutableTreeNode(
                                        p
                                )
                        );
                root.add(pais);
            }
            
            DefaultComboBoxModel model = (DefaultComboBoxModel) cb_personas.getModel();
            model.removeElement(p);
            cb_personas.setModel(model);
            
            if (p.getGenero().equalsIgnoreCase("Masculino")){
                hombres.remove(p);
            } else {
                mujeres.remove(p);
            }
            
            t.reload();
        } catch (Exception e) {
        }
        
        if(!cb_paises.isEnabled()){
            jd_agregar.setVisible(false);
            cb_paises.setEnabled(true);
        }
        
    }//GEN-LAST:event_bt_agregarActionPerformed

    private void jmi_eliminarpaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarpaisActionPerformed
        
        int r = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar este país?", "Eliminar país", JOptionPane.YES_NO_OPTION);
        if(r==0){
            DefaultTreeModel m = (DefaultTreeModel) jt_paises.getModel();
            m.removeNodeFromParent(nodo_seleccionado);
            m.reload();
        }
        
        paises.remove(pais_seleccionado);
        
        
    }//GEN-LAST:event_jmi_eliminarpaisActionPerformed

    private void jmi_eliminarpersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarpersonaActionPerformed
        
        int r = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar esta persona?", "Eliminar persona", JOptionPane.YES_NO_OPTION);
        if(r==0){
            DefaultTreeModel m = (DefaultTreeModel) jt_paises.getModel();
            m.removeNodeFromParent(nodo_seleccionado);
            m.reload();
        }
        
    }//GEN-LAST:event_jmi_eliminarpersonaActionPerformed

    private void jmi_agregarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_agregarPersonaActionPerformed
        
        cb_paises.setSelectedItem(pais_seleccionado);
        cb_paises.setEnabled(false);
        agregarPersona();
        
    }//GEN-LAST:event_jmi_agregarPersonaActionPerformed

    private void bt_modificarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_modificarPersonaActionPerformed
        
        String nacionalidad;
        String nombrePersona;
        String apellido;
        int edad;
        String genero;
        String vocacion;
        boolean tieneTitulo;
        boolean infectadoCorona;
        
        try {
            
            nacionalidad = tf_nacionalidad.getText();
            nombrePersona = tf_nombrePersona.getText();
            apellido = tf_apellido.getText();
            edad = Integer.parseInt(sp_edad.getValue().toString());
            genero = (rb_masculino.isSelected()) ? "Masculino" : "Femenino" ;
            vocacion = tf_vocacion.getText();
            tieneTitulo = cb_titulo.isSelected();
            infectadoCorona = cb_infectado.isSelected();
            
            if(nacionalidad.equals("") 
                    || nombrePersona.equals("")
                    || apellido.equals("")
                    || vocacion.equals("")){
                
                throw new Exception("No se ha ingresado uno o más campos.");
                
            }
            
            persona_seleccionada.setApellido(apellido);
            persona_seleccionada.setEdad(edad);
            persona_seleccionada.setGenero(genero);
            persona_seleccionada.setInfectadoCorona(infectadoCorona);
            persona_seleccionada.setNacionalidad(nacionalidad);
            persona_seleccionada.setNombrePersona(nombrePersona);
            persona_seleccionada.setTieneTitulo(tieneTitulo);
            persona_seleccionada.setVocacion(vocacion);
            
            tf_nacionalidad.setText("");
            tf_nombrePersona.setText("");
            tf_apellido.setText("");
            sp_edad.setValue(20);
            rb_masculino.setSelected(true);
            tf_vocacion.setText("");
            cb_titulo.setSelected(false);
            cb_infectado.setSelected(false);
            
            DefaultTreeModel m = (DefaultTreeModel) jt_paises.getModel();
            m.reload();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al crear una persona.", "Eror", JOptionPane.ERROR_MESSAGE);
        }
        
        jd_crearPersona.setVisible(false);
        bt_crearPersona.setVisible(true);
        bt_modificarPersona.setVisible(false);
        rb_femenino.setEnabled(true);
        rb_masculino.setEnabled(true);
        
    }//GEN-LAST:event_bt_modificarPersonaActionPerformed

    private void jmi_modificarpersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_modificarpersonaActionPerformed
        bt_crearPersona.setVisible(false);
        bt_modificarPersona.setVisible(true);
        rb_femenino.setEnabled(false);
        rb_masculino.setEnabled(false);
        
        tf_nacionalidad.setText(persona_seleccionada.getNacionalidad());
        tf_nombrePersona.setText(persona_seleccionada.getNombrePersona());
        tf_apellido.setText(persona_seleccionada.getApellido());
        sp_edad.setValue(persona_seleccionada.getEdad());
        
        if(persona_seleccionada.getGenero().equalsIgnoreCase("Masculino")){
            rb_masculino.setSelected(true);
        } else {
            rb_femenino.setSelected(true);
        }
        
        tf_vocacion.setText(persona_seleccionada.getVocacion());
        
        if(persona_seleccionada.tieneTitulo()){
            cb_titulo.setSelected(true);
        } else {
            cb_titulo.setSelected(false);
        }
        
        if(persona_seleccionada.isInfectadoCorona()){
            cb_infectado.setSelected(true);
        } else {
            cb_infectado.setSelected(false);
        }
        
        crearPersona();
        
    }//GEN-LAST:event_jmi_modificarpersonaActionPerformed

    private void jmi_expulsarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_expulsarActionPerformed
        
        if (persona_seleccionada.getGenero().equalsIgnoreCase("Masculino")) {
            hombres.add(persona_seleccionada);
        } else {
            mujeres.add(persona_seleccionada);
        }
        
        DefaultTreeModel model = (DefaultTreeModel) jt_paises.getModel();
        model.removeNodeFromParent(nodo_seleccionado);
        
    }//GEN-LAST:event_jmi_expulsarActionPerformed

    private void bt_filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_filtrarActionPerformed
        
        DefaultTreeModel p = (DefaultTreeModel) jt_paises.getModel();
        jt_infectados.setModel(p);
        
        DefaultTreeModel m = (DefaultTreeModel) jt_infectados.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
        
        //DefaultMutableTreeNode root = (DefaultMutableTreeNode) p.getRoot();
        
        for(int i=0; i<raiz.getChildCount(); i++){
            
            for(int j=0; j<2; j++){
                
                for (int k = 0; k < ((DefaultMutableTreeNode) raiz.getChildAt(i) ).getChildAt(j).getChildCount(); k++) {
                    nodo_seleccionado = ((DefaultMutableTreeNode) ((DefaultMutableTreeNode) raiz.getChildAt(i) ).getChildAt(j).getChildAt(k));
                    if( !((Persona)nodo_seleccionado.getUserObject()).isInfectadoCorona() )  {
                        m.removeNodeFromParent(nodo_seleccionado); 
                    }
                }
            }
            
        }
        
        /*
        for (int i=0; i<root.getChildCount(); i++) {
            DefaultMutableTreeNode nodoPais = (DefaultMutableTreeNode)root.getChildAt(i);
            raiz.add(nodoPais);
            
            DefaultMutableTreeNode men = (DefaultMutableTreeNode)nodoPais.getChildAt(0);
            DefaultMutableTreeNode women = (DefaultMutableTreeNode)nodoPais.getChildAt(1);
            nodoPais.add(men);
            nodoPais.add(women);
            
            for(int j=1; j< men.getChildCount(); j++){
                Persona persona = ((Persona)((DefaultMutableTreeNode)men.getChildAt(j)).getUserObject());
                if (persona.isInfectadoCorona()) {
                    men.add(
                            new DefaultMutableTreeNode(
                                    persona
                            )
                    );
                }
            }
            
            for(int j=1; j< women.getChildCount(); j++){
                Persona persona = ((Persona)((DefaultMutableTreeNode)women.getChildAt(j)).getUserObject());
                if (persona.isInfectadoCorona()) {
                    women.add(
                            new DefaultMutableTreeNode(
                                    persona
                            )
                    );
                }
            }
            
        }
        */
        m.reload();
    }//GEN-LAST:event_bt_filtrarActionPerformed

    private void jmi_eliminarpais1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarpais1ActionPerformed
        
        int r = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar esta persona?", "Eliminar persona", JOptionPane.YES_NO_OPTION);
        if(r==0){
            DefaultTreeModel m = (DefaultTreeModel) jt_infectados.getModel();
            m.removeNodeFromParent(nodo_seleccionado);
            m.reload();
        }
        
    }//GEN-LAST:event_jmi_eliminarpais1ActionPerformed

    private void jmi_agregarPersona1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_agregarPersona1ActionPerformed
        
        cb_paises.setSelectedItem(pais_seleccionado);
        cb_paises.setEnabled(false);
        agregarPersona();
        
    }//GEN-LAST:event_jmi_agregarPersona1ActionPerformed

    private void jmi_eliminarpersona1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarpersona1ActionPerformed
        
        int r = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar esta persona?", "Eliminar persona", JOptionPane.YES_NO_OPTION);
        if(r==0){
            DefaultTreeModel m = (DefaultTreeModel) jt_infectados.getModel();
            m.removeNodeFromParent(nodo_seleccionado);
            m.reload();
        }
        
    }//GEN-LAST:event_jmi_eliminarpersona1ActionPerformed

    private void jmi_modificarpersona1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_modificarpersona1ActionPerformed
        bt_crearPersona.setVisible(false);
        bt_modificarPersona.setVisible(true);
        rb_femenino.setEnabled(false);
        rb_masculino.setEnabled(false);
        
        tf_nacionalidad.setText(persona_seleccionada.getNacionalidad());
        tf_nombrePersona.setText(persona_seleccionada.getNombrePersona());
        tf_apellido.setText(persona_seleccionada.getApellido());
        sp_edad.setValue(persona_seleccionada.getEdad());
        
        if(persona_seleccionada.getGenero().equalsIgnoreCase("Masculino")){
            rb_masculino.setSelected(true);
        } else {
            rb_femenino.setSelected(true);
        }
        
        tf_vocacion.setText(persona_seleccionada.getVocacion());
        
        if(persona_seleccionada.tieneTitulo()){
            cb_titulo.setSelected(true);
        } else {
            cb_titulo.setSelected(false);
        }
        
        if(persona_seleccionada.isInfectadoCorona()){
            cb_infectado.setSelected(true);
        } else {
            cb_infectado.setSelected(false);
        }
        
        crearPersona();
    }//GEN-LAST:event_jmi_modificarpersona1ActionPerformed

    private void jmi_expulsar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_expulsar1ActionPerformed
        
        if (persona_seleccionada.getGenero().equalsIgnoreCase("Masculino")) {
            hombres.add(persona_seleccionada);
        } else {
            mujeres.add(persona_seleccionada);
        }
        
        DefaultTreeModel model = (DefaultTreeModel) jt_infectados.getModel();
        model.removeNodeFromParent(nodo_seleccionado);
        
    }//GEN-LAST:event_jmi_expulsar1ActionPerformed

    private void jt_infectadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_infectadosMouseClicked
         
        if(evt.isMetaDown()){
            
            int row = jt_infectados.getClosestRowForLocation(evt.getX(), evt.getY());
            jt_infectados.setSelectionRow(row);
            
            Object node = jt_infectados.getSelectionPath().getLastPathComponent();
            nodo_seleccionado = (DefaultMutableTreeNode) node;
            
            if(nodo_seleccionado.getUserObject() instanceof Pais){
                pais_seleccionado = (Pais) nodo_seleccionado.getUserObject();
                
                pm_pais.show(evt.getComponent(), evt.getX(), evt.getY());
            } else if(nodo_seleccionado.getUserObject() instanceof Persona){
                persona_seleccionada = (Persona) nodo_seleccionado.getUserObject();
                
                pm_persona.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jt_infectadosMouseClicked

    private void bt_modificarPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_modificarPaisActionPerformed
        String nombrePais;
        String himnoNacional;
        Date fechaFundacion;
        Color colorBandera;
        
        try {
            
            nombrePais = tf_nombrePais.getText();
            himnoNacional = tf_himno.getText();
            fechaFundacion = jdc_fundacion.getDate();
            colorBandera = bt_colorBandera.getBackground();
            
            if(nombrePais.equals("")
                    || himnoNacional.equals("")){
                
                throw new Exception("No se ha ingresado uno o más campos.");
            }
            
            Pais p = new Pais(nombrePais, fechaFundacion, himnoNacional, colorBandera);
            
            pais_seleccionado.setColorBandera(colorBandera);
            pais_seleccionado.setFechaFundacion(fechaFundacion);
            pais_seleccionado.setHimnoNacional(himnoNacional);
            pais_seleccionado.setNombrePais(nombrePais);
            
            tf_nombrePais.setText("");
            tf_himno.setText("");
            bt_colorBandera.setBackground(Color.red);
            jdc_fundacion.setDate(new Date());
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al crear una persona.", "Eror", JOptionPane.ERROR_MESSAGE);
        }
        jd_crearPais.setVisible(false);
        bt_modificarPais.setVisible(false);
        bt_crearPais.setVisible(true);
        
    }//GEN-LAST:event_bt_modificarPaisActionPerformed

    private void jmi_modificarpaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_modificarpaisActionPerformed
        bt_modificarPais.setVisible(true);
        bt_crearPais.setVisible(false);
        crearPais();
    }//GEN-LAST:event_jmi_modificarpaisActionPerformed

    private void jmi_modificarpais1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_modificarpais1ActionPerformed
        bt_modificarPais.setVisible(true);
        bt_crearPais.setVisible(false);
        crearPais();
    }//GEN-LAST:event_jmi_modificarpais1ActionPerformed

    private void crearPersona(){
        jd_crearPersona.pack();
        jd_crearPersona.setModal(true);
        jd_crearPersona.setLocationRelativeTo(this);
        jd_crearPersona.setVisible(true);
    }
    
    private void crearPais(){
        jd_crearPais.pack();
        jd_crearPais.setModal(true);
        jd_crearPais.setLocationRelativeTo(this);
        jd_crearPais.setVisible(true);
    }
    
    private void agregarPersona(){
        
        rb_hombres.setSelected(true);
        
        DefaultComboBoxModel model = (DefaultComboBoxModel) cb_personas.getModel();
        model.removeAllElements();
        for (Persona hombre : hombres) {
            model.addElement(hombre);
        }
        cb_personas.setModel(model);
        
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_paises.getModel();
        modelo.removeAllElements();
        for (Pais pais : paises) {
            modelo.addElement(pais);
        }
        cb_paises.setModel(modelo);
        
        jd_agregar.pack();
        jd_agregar.setModal(true);
        jd_agregar.setLocationRelativeTo(this);
        jd_agregar.setVisible(true);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Corona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Corona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Corona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Corona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Corona().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg_genero;
    private javax.swing.ButtonGroup bg_sexo;
    private javax.swing.JButton bt_agregar;
    private javax.swing.JButton bt_colorBandera;
    private javax.swing.JButton bt_crearPais;
    private javax.swing.JButton bt_crearPersona;
    private javax.swing.JButton bt_filtrar;
    private javax.swing.JButton bt_modificarPais;
    private javax.swing.JButton bt_modificarPersona;
    private javax.swing.JCheckBox cb_infectado;
    private javax.swing.JComboBox<String> cb_paises;
    private javax.swing.JComboBox<String> cb_personas;
    private javax.swing.JCheckBox cb_titulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JDialog jd_agregar;
    private javax.swing.JDialog jd_crearPais;
    private javax.swing.JDialog jd_crearPersona;
    private com.toedter.calendar.JDateChooser jdc_fundacion;
    private javax.swing.JMenu jm_admin;
    private javax.swing.JMenu jm_agregar;
    private javax.swing.JMenuItem jmi_add;
    private javax.swing.JMenuItem jmi_agregarPersona;
    private javax.swing.JMenuItem jmi_agregarPersona1;
    private javax.swing.JMenuItem jmi_cPais;
    private javax.swing.JMenuItem jmi_cPersona;
    private javax.swing.JMenuItem jmi_eliminarpais;
    private javax.swing.JMenuItem jmi_eliminarpais1;
    private javax.swing.JMenuItem jmi_eliminarpersona;
    private javax.swing.JMenuItem jmi_eliminarpersona1;
    private javax.swing.JMenuItem jmi_expulsar;
    private javax.swing.JMenuItem jmi_expulsar1;
    private javax.swing.JMenuItem jmi_modificarpais;
    private javax.swing.JMenuItem jmi_modificarpais1;
    private javax.swing.JMenuItem jmi_modificarpersona;
    private javax.swing.JMenuItem jmi_modificarpersona1;
    private javax.swing.JTree jt_infectados;
    private javax.swing.JTree jt_paises;
    private javax.swing.JPopupMenu pm_pais;
    private javax.swing.JPopupMenu pm_pais1;
    private javax.swing.JPopupMenu pm_persona;
    private javax.swing.JPopupMenu pm_persona1;
    private javax.swing.JRadioButton rb_femenino;
    private javax.swing.JRadioButton rb_hombres;
    private javax.swing.JRadioButton rb_masculino;
    private javax.swing.JRadioButton rb_mujeres;
    private javax.swing.JSpinner sp_edad;
    private javax.swing.JTextField tf_apellido;
    private javax.swing.JTextField tf_himno;
    private javax.swing.JTextField tf_nacionalidad;
    private javax.swing.JTextField tf_nombrePais;
    private javax.swing.JTextField tf_nombrePersona;
    private javax.swing.JTextField tf_vocacion;
    // End of variables declaration//GEN-END:variables

    DefaultMutableTreeNode nodo_seleccionado;
    Persona persona_seleccionada;
    Pais pais_seleccionado;
    
    boolean hombreSeleccionado = true;
    
}
